{"ast":null,"code":"var _jsxFileName = \"/Users/nhilai/Documents/GitHub/CapstoneEyes/frontend/src/Screens/loginScreen/loginScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport LoginForm from '../../Components/LoginForm/LoginForm';\nimport { useNavigate } from 'react-router-dom';\nimport axiosInstance from '../../axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function LogInScreen() {\n  _s();\n\n  const history = useNavigate();\n  const [user, setUser] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const [error, setError] = useState(\"\");\n\n  const Login = details => {\n    console.log(details);\n    axiosInstance.post('token/', {\n      email: details.email,\n      password: details.password\n    }).then(res => {\n      localStorage.setItem('access_token', res.data.access);\n      localStorage.setItem('refresh_token', res.data.refresh);\n      axiosInstance.defaults.headers['Authorization'] = 'JWT ' + localStorage.getItem('access_token');\n      history('/');\n      console.log('Logged in');\n    }).catch(err => {\n      if (err.response.data.detail === 'No active account found with the given credentials') {\n        setError('Invalid username or password. Please try again');\n      } else {\n        if (details.email === \"\" || details.password === \"\") {\n          setError('Please fill in the required details');\n        }\n      }\n    }); // else {\n    //   console.log(\"Incorrect credentials. Please try again!\")\n    //   setError(\"Incorrect credentials. Please try again!\")\n    // }\n  };\n\n  const Logout = () => {\n    console.log(\"Logout\");\n    setUser({\n      name: \"\",\n      email: \"\"\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(LoginForm, {\n      Login: Login,\n      error: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 7\n  }, this);\n}\n\n_s(LogInScreen, \"igN+8DdT0urCTEfP2w2MXp1JeJ4=\", false, function () {\n  return [useNavigate];\n});\n\n_c = LogInScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"LogInScreen\");","map":{"version":3,"sources":["/Users/nhilai/Documents/GitHub/CapstoneEyes/frontend/src/Screens/loginScreen/loginScreen.js"],"names":["React","useState","LoginForm","useNavigate","axiosInstance","LogInScreen","history","user","setUser","email","password","error","setError","Login","details","console","log","post","then","res","localStorage","setItem","data","access","refresh","defaults","headers","getItem","catch","err","response","detail","Logout","name"],"mappings":";;;AACA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,SAAP,MAAsB,sCAAtB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,aAAP,MAA0B,aAA1B;;AAEA,OAAO,SAASC,WAAT,GAAsB;AAAA;;AAC3B,QAAMC,OAAO,GAAGH,WAAW,EAA3B;AAEA,QAAM,CAACI,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC;AAACQ,IAAAA,KAAK,EAAE,EAAR;AAAYC,IAAAA,QAAQ,EAAC;AAArB,GAAD,CAAhC;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMY,KAAK,GAAGC,OAAO,IAAI;AACrBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AAEAV,IAAAA,aAAa,CACNa,IADP,CACY,QADZ,EACsB;AACVR,MAAAA,KAAK,EAAEK,OAAO,CAACL,KADL;AAEVC,MAAAA,QAAQ,EAAEI,OAAO,CAACJ;AAFR,KADtB,EAKOQ,IALP,CAKaC,GAAD,IAAS;AACTC,MAAAA,YAAY,CAACC,OAAb,CAAqB,cAArB,EAAqCF,GAAG,CAACG,IAAJ,CAASC,MAA9C;AACAH,MAAAA,YAAY,CAACC,OAAb,CAAqB,eAArB,EAAsCF,GAAG,CAACG,IAAJ,CAASE,OAA/C;AACApB,MAAAA,aAAa,CAACqB,QAAd,CAAuBC,OAAvB,CAA+B,eAA/B,IACI,SAASN,YAAY,CAACO,OAAb,CAAqB,cAArB,CADb;AAEArB,MAAAA,OAAO,CAAC,GAAD,CAAP;AACAS,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACL,KAZP,EAYSY,KAZT,CAYgBC,GAAD,IAAQ;AACf,UAAIA,GAAG,CAACC,QAAJ,CAAaR,IAAb,CAAkBS,MAAlB,KAA6B,oDAAjC,EAAsF;AACpFnB,QAAAA,QAAQ,CAAC,gDAAD,CAAR;AACD,OAFD,MAGI;AACF,YAAKE,OAAO,CAACL,KAAR,KAAkB,EAAnB,IAA2BK,OAAO,CAACJ,QAAR,KAAqB,EAApD,EAAwD;AACtDE,UAAAA,QAAQ,CAAC,qCAAD,CAAR;AACD;AAAE;AACJ,KApBT,EAHqB,CAyBrB;AACA;AACA;AACA;AACH,GA7BD;;AA+BA,QAAMoB,MAAM,GAAG,MAAM;AACjBjB,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAR,IAAAA,OAAO,CAAC;AAAEyB,MAAAA,IAAI,EAAE,EAAR;AAAYxB,MAAAA,KAAK,EAAE;AAAnB,KAAD,CAAP;AACH,GAHD;;AAKA,sBACI;AAAK,IAAA,SAAS,EAAG,KAAjB;AAAA,2BACE,QAAC,SAAD;AAAW,MAAA,KAAK,EAAII,KAApB;AAA2B,MAAA,KAAK,EAAIF;AAApC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADJ;AAKD;;GA/CeN,W;UACEF,W;;;KADFE,W","sourcesContent":["\nimport React, {useState} from 'react';\nimport LoginForm from '../../Components/LoginForm/LoginForm';\nimport { useNavigate } from 'react-router-dom';\nimport axiosInstance from '../../axios'; \n\nexport function LogInScreen(){\n  const history = useNavigate();\n\n  const [user, setUser] = useState({email: \"\", password:\"\"})\n  const [error, setError] = useState(\"\");\n  \n  const Login = details => {\n      console.log(details);\n\n      axiosInstance\n            .post('token/', {\n                  email: details.email,\n                  password: details.password\n            })\n            .then((res) => {\n                  localStorage.setItem('access_token', res.data.access);\n                  localStorage.setItem('refresh_token', res.data.refresh);\n                  axiosInstance.defaults.headers['Authorization'] =\n                      'JWT ' + localStorage.getItem('access_token');\n                  history('/');\n                  console.log('Logged in');\n            }).catch((err) =>{\n              if (err.response.data.detail === 'No active account found with the given credentials'){\n                setError('Invalid username or password. Please try again')\n              }\n              else{\n                if ((details.email === \"\") || (details.password === \"\")){\n                  setError('Please fill in the required details')\n                } }\n              })\n     \n      // else {\n      //   console.log(\"Incorrect credentials. Please try again!\")\n      //   setError(\"Incorrect credentials. Please try again!\")\n      // }\n  }\n\n  const Logout = () => {\n      console.log(\"Logout\");\n      setUser({ name: \"\", email: \"\"});\n  }\n\n  return(\n      <div className = \"App\">\n        <LoginForm Login = {Login} error = {error}/>    \n      </div>\n  )\n}\n\n\n"]},"metadata":{},"sourceType":"module"}